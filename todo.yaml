swagger: '2.0'
info:
  title: Todo API
  description: Todo API
  version: 1.0.0
  termsOfService: 'https://todo.vacs.fr/terms/'
  contact:
    email: Stephane.Carrez@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: todo.vacs.fr
basePath: /v1
tags:
  - name: tasks
    description: Tasks
schemes:
  - https
  - http
consumes:
  - application/x-www-form-urlencoded
produces:
  - application/json
paths:
  /todos:
    get:
      tags:
        - tasks
      summary: List the available tasks
      description: |
        The list of tasks can be filtered by their status.
      operationId: listTodos
      produces:
        - application/json
      parameters:
        - name: status
          in: query
          description: Filters the tasks by their status
          required: false
          type: string
          enum:
            - done
            - waiting
            - working
            - all
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Todo'
        '400':
          description: Invalid status value
      security:
        - todo_auth:
            - 'read:todo'
    post:
      tags:
        - tasks
      summary: Create a todo
      description: ''
      operationId: createTodo
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: title
          in: formData
          description: The todo title
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Todo'
        '405':
          description: Invalid input
      security:
        - todo_auth:
            - 'write:todo'
  '/todos/{todoId}':
    put:
      tags:
        - tasks
      summary: Update the todo
      description: |
        Update the todo title and status
      operationId: updateTodo
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: todoId
          in: path
          description: The todo identifier
          required: true
          type: integer
          format: int64
        - name: title
          in: formData
          required: false
          description: The todo title
          type: string
        - name: status
          in: formData
          required: false
          description: The todo status
          type: string
          enum:
            - working
            - waiting
            - done
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Todo'
        '404':
          description: |
            The todo does not exist.
      security:
        - todo_auth:
            - 'write:todo'
    delete:
      tags:
        - tasks
      summary: Delete the todo
      description: |
        Delete the todo
      operationId: deleteTodo
      parameters:
        - name: todoId
          in: path
          description: The todo identifier
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: |
            No content.
        '404':
          description: |
            The todo does not exist.
      security:
        - todo_auth:
            - 'write:todo'
security:
  - todo_auth: []
securityDefinitions:
  todo_auth:
    type: oauth2
    flow: password
    tokenUrl: http://localhost:8080/v1/oauth/token
    scopes:
      'write:todo': Write a todo
      'read:todo': Read a todo
definitions:
  Todo:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: The todo identifier
      title:
        type: string
        description: The todo title
      create_date:
        type: string
        format: date-time
        description: The todo creation date
      done_date:
        type: string
        format: date-time
        description: The todo resolution date
      status:
        type: string
        description: The todo state
        enum:
          - waiting
          - working
          - done
    required:
      - id
      - title
      - status
      - create_date
    example:
      id: 23
      title: Make the FOSDEM presentation
      description: password
      status: working
      create_date: 2017-12-24T00:00:00.000Z
    xml:
      name: Todo
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
