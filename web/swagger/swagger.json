{
  "swagger" : "2.0",
  "info" : {
    "description" : "Todo API",
    "version" : "1.0.0",
    "title" : "Todo API",
    "termsOfService" : "https://todo.vacs.fr/terms/",
    "contact" : {
      "email" : "Stephane.Carrez@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "SWAGGER_HOST",
  "basePath" : "/v1",
  "tags" : [ {
    "name" : "tasks",
    "description" : "Tasks"
  } ],
  "schemes" : [ "https", "http" ],
  "consumes" : [ "application/x-www-form-urlencoded" ],
  "produces" : [ "application/json" ],
  "security" : [ {
    "todo_auth" : [ ]
  } ],
  "paths" : {
    "/todos" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "List the available tasks",
        "description" : "The list of tasks can be filtered by their status.\n",
        "operationId" : "listTodos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Filters the tasks by their status",
          "required" : false,
          "type" : "string",
          "enum" : [ "done waiting working all" ],
          "x-is-model-type" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Todo"
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        },
        "security" : [ {
          "todo_auth" : [ "read:todo" ]
        } ],
        "x-codegen-response" : {
          "baseName" : "response",
          "complexType" : "Todo",
          "getter" : "getResponse",
          "setter" : "setResponse",
          "datatype" : "Todos.Models.Todo_Type_Vectors.Vector",
          "datatypeWithEnum" : "Todos.Models.Todo_Type_Vectors.Vector",
          "name" : "Response",
          "defaultValue" : "null",
          "defaultValueWithParam" : " = data.response;",
          "baseType" : "array",
          "containerType" : "array",
          "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/Todo\"\n  }\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "hasMore" : false,
          "required" : false,
          "secondaryParam" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isContainer" : true,
          "isNotContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isLong" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isListContainer" : true,
          "isMapContainer" : false,
          "isEnum" : false,
          "isReadOnly" : false,
          "items" : {
            "baseName" : "Response",
            "complexType" : "Todo",
            "getter" : "getResponse",
            "setter" : "setResponse",
            "datatype" : "Todos.Models.Todo_Type",
            "datatypeWithEnum" : "Todos.Models.Todo_Type",
            "name" : "Response",
            "defaultValue" : "null",
            "defaultValueWithParam" : " = data.Response;",
            "baseType" : "Todo",
            "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/Todo\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "Response",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false
          },
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "Response",
          "isXmlAttribute" : false,
          "isXmlWrapped" : false
        },
        "x-has-uniq-produces" : true,
        "x-has-uniq-consumes" : true,
        "x-has-notes" : true
      },
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Create a todo",
        "description" : "",
        "operationId" : "createTodo",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "title",
          "in" : "formData",
          "description" : "The todo title",
          "required" : true,
          "type" : "string",
          "x-is-model-type" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Todo"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "todo_auth" : [ "write:todo" ]
        } ],
        "x-codegen-response" : {
          "baseName" : "response",
          "complexType" : "Todo",
          "getter" : "getResponse",
          "setter" : "setResponse",
          "datatype" : "Todos.Models.Todo_Type",
          "datatypeWithEnum" : "Todos.Models.Todo_Type",
          "name" : "Response",
          "defaultValue" : "null",
          "defaultValueWithParam" : " = data.response;",
          "baseType" : "Todo",
          "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/Todo\"\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "hasMore" : false,
          "required" : false,
          "secondaryParam" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isContainer" : false,
          "isNotContainer" : true,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isLong" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isListContainer" : false,
          "isMapContainer" : false,
          "isEnum" : false,
          "isReadOnly" : false,
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "Response",
          "isXmlAttribute" : false,
          "isXmlWrapped" : false
        },
        "x-has-uniq-produces" : true,
        "x-has-uniq-consumes" : true,
        "x-has-notes" : false
      }
    },
    "/todos/{todoId}" : {
      "put" : {
        "tags" : [ "tasks" ],
        "summary" : "Update the todo",
        "description" : "Update the todo title and status\n",
        "operationId" : "updateTodo",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "todoId",
          "in" : "path",
          "description" : "The todo identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-is-model-type" : false
        }, {
          "name" : "title",
          "in" : "formData",
          "description" : "The todo title",
          "required" : false,
          "type" : "string",
          "x-is-model-type" : false
        }, {
          "name" : "status",
          "in" : "formData",
          "description" : "The todo status",
          "required" : false,
          "type" : "string",
          "enum" : [ "working", "waiting", "done" ],
          "x-is-model-type" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Todo"
            }
          },
          "404" : {
            "description" : "The todo does not exist.\n"
          }
        },
        "security" : [ {
          "todo_auth" : [ "write:todo" ]
        } ],
        "x-codegen-response" : {
          "baseName" : "response",
          "complexType" : "Todo",
          "getter" : "getResponse",
          "setter" : "setResponse",
          "datatype" : "Todos.Models.Todo_Type",
          "datatypeWithEnum" : "Todos.Models.Todo_Type",
          "name" : "Response",
          "defaultValue" : "null",
          "defaultValueWithParam" : " = data.response;",
          "baseType" : "Todo",
          "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/Todo\"\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "hasMore" : false,
          "required" : false,
          "secondaryParam" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isContainer" : false,
          "isNotContainer" : true,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isLong" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isListContainer" : false,
          "isMapContainer" : false,
          "isEnum" : false,
          "isReadOnly" : false,
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "Response",
          "isXmlAttribute" : false,
          "isXmlWrapped" : false
        },
        "x-has-uniq-produces" : true,
        "x-has-uniq-consumes" : true,
        "x-has-notes" : true
      },
      "delete" : {
        "tags" : [ "tasks" ],
        "summary" : "Delete the todo",
        "description" : "Delete the todo\n",
        "operationId" : "deleteTodo",
        "parameters" : [ {
          "name" : "todoId",
          "in" : "path",
          "description" : "The todo identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-is-model-type" : false
        } ],
        "responses" : {
          "204" : {
            "description" : "No content.\n"
          },
          "404" : {
            "description" : "The todo does not exist.\n"
          }
        },
        "security" : [ {
          "todo_auth" : [ "write:todo" ]
        } ],
        "x-has-uniq-produces" : true,
        "x-has-uniq-consumes" : true,
        "x-has-notes" : true
      }
    }
  },
  "securityDefinitions" : {
    "todo_auth" : {
      "type" : "oauth2",
      "tokenUrl" : "/v1/oauth/token",
      "flow" : "password",
      "scopes" : {
        "write:todo" : "Write a todo",
        "read:todo" : "Read a todo"
      }
    }
  },
  "definitions" : {
    "Todo" : {
      "type" : "object",
      "required" : [ "create_date", "id", "status", "title" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The todo identifier",
          "x-is-model-type" : false
        },
        "title" : {
          "type" : "string",
          "description" : "The todo title",
          "x-is-model-type" : false
        },
        "create_date" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The todo creation date",
          "x-is-model-type" : false
        },
        "done_date" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The todo resolution date",
          "x-is-model-type" : false
        },
        "status" : {
          "type" : "string",
          "description" : "The todo state",
          "enum" : [ "waiting", "working", "done" ],
          "x-is-model-type" : false
        }
      },
      "example" : {
        "id" : 23,
        "title" : "Make the FOSDEM presentation",
        "description" : "password",
        "status" : "working",
        "create_date" : "2017-12-24T00:00:00.000+0000"
      },
      "xml" : {
        "name" : "Todo"
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  }
}